-- -----------------------------
-- 1.1.6 Consultas resumen
-- -----------------------------
-- 1) Calcula el número total de productos que hay en la tabla productos.

SELECT COUNT(*) AS num_total_prods
FROM producto;

-- 2) Calcula el número total de fabricantes que hay en la tabla fabricante.

SELECT COUNT(*) AS num_total_fabricantes
FROM fabricante;

-- 3) Calcula el número de valores distintos de código de fabricante aparecen en la tabla productos.

SELECT DISTINCT(codigo_fabricante)
FROM producto;

-- 4) Calcula la media del precio de todos los productos.

SELECT AVG(precio)
FROM producto;

-- 5) Calcula el precio más barato de todos los productos.

SELECT MIN(precio)
FROM producto;

-- 6) Calcula el precio más caro de todos los productos.

SELECT MAX(precio)
FROM producto;

-- 7) Lista el nombre y el precio del producto más barato.

SELECT nombre, precio
FROM producto
ORDER BY precio ASC
LIMIT 1;

-- 8) Lista el nombre y el precio del producto más caro.

SELECT nombre, precio
FROM producto
ORDER BY precio DESC
LIMIT 1;

-- 9) Calcula la suma de los precios de todos los productos.

SELECT SUM(precio)
FROM producto;

-- 10) Calcula el número de productos que tiene el fabricante Asus.

SELECT COUNT(*)
FROM producto AS p
INNER JOIN fabricante AS f
ON p.codigo_fabricante=f.codigo
WHERE f.nombre="Asus";

-- 11) Calcula la media del precio de todos los productos del fabricante Asus.

SELECT AVG(p.precio)
FROM producto AS p
INNER JOIN fabricante AS f
ON p.codigo_fabricante=f.codigo
WHERE f.nombre="Asus";

-- 12) Calcula el precio más barato de todos los productos del fabricante Asus.

SELECT MIN(p.precio)
FROM producto AS p
INNER JOIN fabricante AS f
ON p.codigo_fabricante=f.codigo
WHERE f.nombre="Asus";

-- 13) Calcula el precio más caro de todos los productos del fabricante Asus.

SELECT MAX(p.precio)
FROM producto AS p
INNER JOIN fabricante AS f
ON p.codigo_fabricante=f.codigo
WHERE f.nombre="Asus";

-- 14) Calcula la suma de todos los productos del fabricante Asus.

SELECT SUM(p.precio)
FROM producto AS p
INNER JOIN fabricante AS f
ON p.codigo_fabricante=f.codigo
WHERE f.nombre="Asus";

-- 15) Muestra el precio máximo, precio mínimo, precio medio y el 
--     número total de productos que tiene el fabricante Crucial.

SELECT MAX(p.precio), MIN(p.precio), AVG(p.precio), COUNT(*)
FROM producto AS p
INNER JOIN fabricante AS f
ON p.codigo_fabricante=f.codigo
WHERE f.nombre="Crucial";

-- 16) Muestra el número total de productos que tiene cada uno de los fabricantes. 
--     El listado también debe incluir los fabricantes que no tienen ningún producto. 
--     El resultado mostrará dos columnas, una con el nombre del fabricante y otra con el 
--     número de productos que tiene. Ordene el resultado descendentemente por el número de 
--     productos.

SELECT f.nombre AS nombre_fab, COUNT(p.codigo) AS num_productos
FROM fabricante AS f
LEFT JOIN producto AS p
ON f.codigo=p.codigo_fabricante
GROUP BY f.codigo
ORDER BY num_productos DESC;

-- 17) Muestra el precio máximo, precio mínimo y precio medio de los productos de cada uno de los 
--     fabricantes. El resultado mostrará el nombre del fabricante junto con los datos que se 
--     solicitan.

SELECT f.nombre AS nombre_fab, MAX(p.precio), MIN(p.precio), AVG(p.precio)
FROM fabricante AS f
LEFT JOIN producto AS p
ON f.codigo=p.codigo_fabricante
GROUP BY f.codigo;

-- 18) Muestra el precio máximo, precio mínimo, precio medio y el número total de productos 
--     de los fabricantes que tienen un precio medio superior a 200€. No es necesario mostrar 
--     el nombre del fabricante, con el código del fabricante es suficiente.

SELECT f.codigo AS codigo_fab, MAX(p.precio), MIN(p.precio), AVG(p.precio), COUNT(p.codigo)
FROM fabricante AS f
INNER JOIN producto AS p
ON f.codigo=p.codigo_fabricante
GROUP BY f.codigo
HAVING AVG(p.precio)>200;

-- 19) Muestra el nombre de cada fabricante, junto con el precio máximo, precio mínimo, 
--     precio medio y el número total de productos de los fabricantes que tienen un precio medio 
--     superior a 200€. Es necesario mostrar el nombre del fabricante.

SELECT f.nombre AS nombre_fab, MAX(p.precio), MIN(p.precio), AVG(p.precio), COUNT(p.codigo)
FROM fabricante AS f
INNER JOIN producto AS p
ON f.codigo=p.codigo_fabricante
GROUP BY f.codigo
HAVING AVG(p.precio)>200;

-- 20) Calcula el número de productos que tienen un precio mayor o igual a 180€.

SELECT COUNT(*)
FROM producto
WHERE precio>=180;

-- 21) Calcula el número de productos que tiene cada fabricante con un precio mayor o igual a 180€.

SELECT f.codigo AS codigo_fab, f.nombre AS nombre_fab, COUNT(p.codigo) AS num_prod
FROM fabricante AS f
LEFT JOIN producto AS p
ON f.codigo=p.codigo_fabricante
WHERE p.precio>=180
GROUP BY f.codigo;

-- 22) Lista el precio medio los productos de cada fabricante, mostrando solamente el código del 
--     fabricante.

SELECT f.codigo AS codigo_fab, AVG(p.precio)
FROM fabricante AS f
LEFT JOIN producto AS p
ON f.codigo=p.codigo_fabricante
GROUP BY f.codigo;

-- 23) Lista el precio medio los productos de cada fabricante, mostrando solamente el nombre del 
--     fabricante.

SELECT f.nombre AS nombre_fab, AVG(p.precio)
FROM fabricante AS f
LEFT JOIN producto AS p
ON f.codigo=p.codigo_fabricante
GROUP BY f.codigo;

-- 24) Lista los nombres de los fabricantes cuyos productos tienen un precio medio mayor o igual 
--     a 150€.

SELECT f.nombre AS nombre_fab
FROM fabricante AS f
INNER JOIN producto AS p
ON f.codigo=p.codigo_fabricante
GROUP BY f.codigo
HAVING AVG(p.precio)>=150;

-- 25) Devuelve un listado con los nombres de los fabricantes que tienen 2 o más productos.

SELECT f.nombre AS nombre_fab
FROM fabricante AS f
INNER JOIN producto AS p
ON f.codigo=p.codigo_fabricante
GROUP BY f.codigo
HAVING COUNT(*)>=2;

-- 26) Devuelve un listado con los nombres de los fabricantes y el número de productos que 
--     tiene cada uno con un precio superior o igual a 220 €. No es necesario mostrar el nombre 
--     de los fabricantes que no tienen productos que cumplan la condición.

SELECT f.nombre AS nombre_fab, COUNT(p.codigo) AS total_num_prod
FROM fabricante AS f
INNER JOIN producto AS p
ON f.codigo=p.codigo_fabricante
WHERE p.precio>=220
GROUP BY f.codigo;

-- 27) Devuelve un listado con los nombres de los fabricantes y el número de productos que tiene 
--     cada uno con un precio superior o igual a 220 €. El listado debe mostrar el nombre de todos 
--     los fabricantes, es decir, si hay algún fabricante que no tiene productos con un precio 
--     superior o igual a 220€ deberá aparecer en el listado con un valor igual a 0 en el número 
--     de productos.

SELECT f.nombre AS nombre_fab, 0 AS total_num_prod
FROM fabricante AS f
LEFT JOIN producto AS p
ON f.codigo=p.codigo_fabricante
WHERE f.nombre NOT IN
		(SELECT f.nombre
		FROM fabricante AS f
		INNER JOIN producto AS p
		ON f.codigo=p.codigo_fabricante
		WHERE p.precio>=220
		GROUP BY f.codigo)
UNION
(
	SELECT f.nombre AS nombre_fab, COUNT(p.codigo) AS total_num_prod
	FROM fabricante AS f
	INNER JOIN producto AS p
	ON f.codigo=p.codigo_fabricante
	WHERE p.precio>=220
	GROUP BY f.codigo
);    

-- 28) Devuelve un listado con los nombres de los fabricantes donde la suma del precio de todos 
--     sus productos es superior a 1000 €.

	SELECT f.nombre AS nombre_fab
	FROM fabricante AS f
	LEFT JOIN producto AS p
	ON f.codigo=p.codigo_fabricante
	GROUP BY f.codigo
    HAVING SUM(p.precio)>1000;
    
